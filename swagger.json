{
  "swagger": "2.0",
  "info": {
    "title": "Subscription API",
    "description": "Subscription API is a microservice based app in which we have used nodejs and mangooDb as technology stack.This app is exposing api for CreateSubscription, CancelSubscription,GetAllSubscription and GetASubscription. ",
    "version": "1.0.0"
  },
  "host": "localhost:8081",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api-key",
      "in": "header"
    }
  },
  "paths": {
    "/api/createSubscription": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                },
                "flagForConsent": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/subscription": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/subscription/": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api-docs": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "server side error": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "ERROR"
        },
        "msg": {
          "type": "string",
          "example": "some error message"
        },
        "error": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "example": "Error message caught"
            },
            "name": {
              "type": "string",
              "example": "Error name"
            },
            "stack": {
              "type": "string",
              "example": "Error stack"
            }
          },
          "required": [
            "message",
            "name"
          ]
        }
      },
      "required": [
        "status",
        "msg"
      ]
    },
    "calculation": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "example": "2020-03-31T00:00:00.000Z"
        },
        "result": {
          "type": "number",
          "example": 100
        }
      },
      "required": [
        "createdAt",
        "result"
      ]
    }
  }
}